// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String  @id @default(cuid())
  firstName       String?
  lastName        String?
  username        String?
  gender          String?
  clerkId         String  @unique // unique identifier for the user in Clerk
  profileImageUrl String?
  avatarConfig    String?

  birthday              String?
  primaryEmailAddressId String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  emailAddresses EmailAddress[]
  rooms          Room[]         @relation("UserRooms")

  additionalInfo AdditionalUserInfo?

  @@unique([id, clerkId])
}

model AdditionalUserInfo {
  id String @id @default(cuid())

  userId String @unique
  user   User?  @relation(fields: [userId], references: [id], onDelete: Cascade)

  preferredLanguage String?
  tierProgress      Int?    @default(0)

  tierId String? @default("cm57vg0ek0000j0jsjg02x2v9")
  tier   Tier?   @relation(fields: [tierId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model EmailAddress {
  id        String @id @default(cuid())
  addressId String @unique
  email     String

  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Room {
  id String @id @default(cuid())

  status RoomStatus? @default(WAITING)

  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, name: "UserRooms")

  matchedAt DateTime?
  createdAt DateTime  @default(now())
}

enum RoomStatus {
  WAITING
  MATCHED
}

model Tier {
  id String @id @default(cuid())

  name        String
  imageUrl    String?
  description String?

  tierRange String // e.g. 1-10

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  users AdditionalUserInfo[]
}
