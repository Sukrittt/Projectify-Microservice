// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String  @id @default(cuid())
  firstName       String?
  lastName        String?
  username        String?
  gender          String?
  clerkId         String  @unique // unique identifier for the user in Clerk
  profileImageUrl String?
  avatarImageUrl  String?

  birthday              String?
  primaryEmailAddressId String?
  primaryPhoneNumberId  String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  emailAddresses EmailAddress[]
  phoneNumbers   PhoneNumber[]

  @@unique([id, clerkId])
}

model EmailAddress {
  id        String @id @default(cuid())
  addressId String @unique
  email     String

  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model PhoneNumber {
  id     String @id @default(cuid())
  number String

  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
